<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:batch="http://www.springframework.org/schema/batch"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
    http://www.springframework.org/schema/batch
    http://www.springframework.org/schema/batch/spring-batch.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd">

    <context:component-scan base-package="com.boissinot.jenkins.csvexporter.domain.generated"/>
    <context:property-placeholder location="infra.properties"/>

    <import resource="classpath:batch-infra.xml"/>
    <import resource="classpath:extract-spi.xml"/>

    <bean id="httpResourceContentFetcher"
          class="com.boissinot.jenkins.csvexporter.service.http.HttpResourceContentFetcher">
        <constructor-arg>
            <bean id="httpConnectionRetriever"
                  class="com.boissinot.jenkins.csvexporter.service.http.HttpConnectionRetriever">
                <constructor-arg value="${vcs.nonProxyHost}" index="0"/>
                <constructor-arg value="${vcs.httpProxyHost}" index="1"/>
                <constructor-arg value="${vcs.httpProxyPort}" index="2"/>
            </bean>
        </constructor-arg>
    </bean>

    <batch:job id="extract-jenkins-job">
        <batch:step id="loadCVSModules" next="extractInfos">
            <batch:tasklet>
                <bean class="com.boissinot.jenkins.csvexporter.batch.CVSModulesLoaderTasklet">
                    <property name="resourceContentFetcher" ref="httpResourceContentFetcher"/>
                    <property name="cvsModuleURL" value="${cvs.module.url}"/>
                </bean>
                <batch:listeners>
                    <batch:listener ref="promotionListener"/>
                </batch:listeners>
            </batch:tasklet>
        </batch:step>
        <batch:step id="extractInfos">
            <batch:tasklet>
                <batch:chunk reader="reader"
                             processor="processor"
                             writer="writer"
                             commit-interval="10"
                             skip-limit="200">
                    <batch:skippable-exception-classes>
                        <batch:include class="java.lang.Throwable"/>
                    </batch:skippable-exception-classes>
                </batch:chunk>
            </batch:tasklet>
            <batch:listeners>
                <batch:listener ref="exportBatchListener">
                </batch:listener>
            </batch:listeners>
        </batch:step>
    </batch:job>

    <bean id="promotionListener" class="org.springframework.batch.core.listener.ExecutionContextPromotionListener">
        <property name="keys" value="moduleMap"/>
    </bean>

    <bean id="exportBatchListener" class="com.boissinot.jenkins.csvexporter.batch.SkipExportListener"/>

    <bean id="reader"
          class="com.boissinot.jenkins.csvexporter.batch.JobItemReader"
          scope="step">
        <property name="jenkinsReader" ref="jenkinsReader"/>
    </bean>

    <bean id="writer"
          class="org.springframework.batch.item.file.FlatFileItemWriter" scope="step">
        <property name="resource" value="file:#{jobParameters['exportcsv.filepath']}"/>
        <property name="shouldDeleteIfExists" value="true"/>
        <property name="headerCallback">
            <bean class="com.boissinot.jenkins.csvexporter.batch.FlatFileItemWriterHeaderCallback">
                <property name="labels"
                          value="#{outputObj.getNameLabels()}"/>
            </bean>
        </property>
        <property name="lineAggregator">
            <bean class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
                <property name="delimiter" value=";"/>
                <property name="fieldExtractor">
                    <bean class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
                        <property name="names"
                                  value="#{outputObj.getNames()}"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="abstractJobExtractor"
          class="com.boissinot.jenkins.csvexporter.service.extractor.jenkins.JobExtractorSupport"
          abstract="true">
        <constructor-arg ref="httpResourceContentFetcher"/>
        <constructor-arg>
            <bean class="com.boissinot.jenkins.csvexporter.service.extractor.maven.pom.POMDeveloperSectionExtractor"/>
        </constructor-arg>
        <constructor-arg value="${cvs.viewer.rootUrl}"/>
    </bean>

    <bean id="matrixJobExtractor" class="com.boissinot.jenkins.csvexporter.service.extractor.jenkins.MatrixJobExtractor"
          parent="abstractJobExtractor"/>
    <bean id="mavenJobExtractor" class="com.boissinot.jenkins.csvexporter.service.extractor.jenkins.MavenJobExtractor"
          parent="abstractJobExtractor"/>
    <bean id="freestyleJobExtractor"
          class="com.boissinot.jenkins.csvexporter.service.extractor.jenkins.FreestyleJobExtractor"
          parent="abstractJobExtractor"/>

    <beans profile="local">
        <bean id="jenkinsReader"
              class="com.boissinot.jenkins.csvexporter.batch.LocalJenkinsReader"
              scope="step">
            <constructor-arg value="#{jobParameters['folder.path']}"/>
        </bean>
    </beans>

    <beans profile="remote">
        <bean id="jenkinsReader"
              class="com.boissinot.jenkins.csvexporter.batch.RemoteJenkinsReader"
              scope="step">
            <constructor-arg ref="httpResourceContentFetcher"/>
            <constructor-arg value="#{jobParameters['jenkins.url']}"/>
        </bean>
    </beans>

</beans>