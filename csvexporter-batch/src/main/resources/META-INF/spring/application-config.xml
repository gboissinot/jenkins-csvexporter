<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:batch="http://www.springframework.org/schema/batch"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
    http://www.springframework.org/schema/batch
    http://www.springframework.org/schema/batch/spring-batch.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/util
    http://www.springframework.org/schema/util/spring-util.xsd
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd">

    <context:component-scan
            base-package="com.boissinot.jenkins.csvexporter.domain.generated,com.boissinot.jenkins.csvexporter.javaconfig"/>

    <context:property-placeholder properties-ref="configProps"/>

    <import resource="batch-infra.xml"/>
    <import resource="extract-spi.xml"/>

    <context:annotation-config/>

    <bean id="httpResourceContentFetcher"
          class="com.boissinot.jenkins.csvexporter.service.http.HttpResourceContentFetcher">
        <constructor-arg>
            <bean id="httpConnectionRetriever"
                  class="com.boissinot.jenkins.csvexporter.service.http.HttpConnectionRetriever">
                <constructor-arg value="${vcs.nonProxyHost}" index="0"/>
                <constructor-arg value="${vcs.httpProxyHost}" index="1"/>
                <constructor-arg value="${vcs.httpProxyPort}" index="2"/>
            </bean>
        </constructor-arg>
    </bean>

    <batch:job id="extract-jenkins-job">
        <batch:step id="cleanupOutputFilesStep" next="loadCVSModulesStep">
            <batch:tasklet ref="cleanupOutputFilesTasklet"/>
        </batch:step>
        <batch:step id="loadCVSModulesStep" next="extractInfosStep">
            <batch:tasklet ref="batchContextLoader">
                <batch:listeners>
                    <batch:listener>
                        <bean id="promotionListener"
                              class="org.springframework.batch.core.listener.ExecutionContextPromotionListener">
                            <property name="keys" value="mapContext"/>
                        </bean>
                    </batch:listener>
                </batch:listeners>
            </batch:tasklet>
        </batch:step>
        <batch:step id="extractInfosStep">
            <batch:tasklet>
                <batch:chunk reader="reader"
                             processor="processor"
                             writer="writer"
                             commit-interval="2"
                             skip-limit="200">
                    <batch:skippable-exception-classes>
                        <batch:include class="java.lang.Throwable"/>
                    </batch:skippable-exception-classes>
                </batch:chunk>
            </batch:tasklet>
            <batch:listeners>
                <batch:listener>
                    <ref bean="skipExportListener"/>
                </batch:listener>
            </batch:listeners>
        </batch:step>
    </batch:job>

    <bean id="reader"
          class="com.boissinot.jenkins.csvexporter.batch.JobItemReader"
          c:jenkinsReader-ref="jenkinsReader"
          scope="step"/>

    <bean id="processor"
          class="com.boissinot.jenkins.csvexporter.batch.JobItemProcessor"
          scope="step">
    </bean>

    <bean id="writer"
          class="org.springframework.batch.item.file.FlatFileItemWriter"
          scope="step">
        <property name="resource" value="file:#{jobParameters['exportcsv.filepath']}"/>
        <property name="shouldDeleteIfExists" value="true"/>
        <property name="headerCallback">
            <bean class="com.boissinot.jenkins.csvexporter.batch.FlatFileItemWriterHeaderCallback">
                <property name="labels"
                          value="#{outputObj.getNameLabels()}"/>
            </bean>
        </property>
        <property name="lineAggregator">
            <bean class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
                <property name="delimiter" value=";"/>
                <property name="fieldExtractor">
                    <bean class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
                        <property name="names"
                                  value="#{outputObj.getNames()}"/>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="cleanupOutputFilesTasklet"
          class="com.boissinot.jenkins.csvexporter.batch.CleanupOutputFilesTasklet"
          scope="step">
        <constructor-arg>
            <list>
                <value>#{jobParameters['error.exportcsv.filepath']}</value>
                <value>#{jobParameters['update.email.filepath']}</value>
                <value>#{jobParameters['log.filepath']}</value>
            </list>
        </constructor-arg>
    </bean>

    <bean id="skipExportListener"
          class="com.boissinot.jenkins.csvexporter.batch.SkipExportListener"
          c:errorCSVFilePath="#{jobParameters['error.exportcsv.filepath']}"
          scope="step"/>

    <bean id="outputObjBuilder"
          class="com.boissinot.jenkins.csvexporter.service.extractor.jenkins.OutputObjBuilder">
        <property name="httpResourceContentFetcher" ref="httpResourceContentFetcher"/>
        <property name="pomFileInfoExtractor">
            <bean class="com.boissinot.jenkins.csvexporter.service.extractor.maven.pom.POMFileInfoExtractor">
                <property name="csvViewerRootUrl" value="${cvs.viewer.rootUrl}"/>
            </bean>
        </property>
    </bean>

    <bean id="configObjPayloadJobTransformer"
          class="com.boissinot.jenkins.csvexporter.service.integration.ConfigObjPayloadJobTransformer"/>

    <beans profile="local">

        <util:properties id="configProps" location="config/local/infra-config.properties"/>

        <bean id="batchContextLoader" class="com.boissinot.jenkins.csvexporter.batch.loader.BatchContextLoader"/>

        <bean id="jenkinsReader"
              class="com.boissinot.jenkins.csvexporter.batch.LocalJenkinsReader"
              c:folderPath="#{jobParameters['folder.path']}"
              scope="step"/>
    </beans>

    <beans profile="remote">

        <util:properties id="configProps" location="config/remote/infra-config.properties"/>

        <bean id="batchContextLoader" class="com.boissinot.jenkins.csvexporter.batch.loader.BatchContextLoader">
            <property name="extractorList">
                <list>
                    <bean class="com.boissinot.jenkins.csvexporter.batch.loader.CVSModulesFileExtractor"
                          c:cvsModuleURL="${cvs.module.url}"
                          c:httpResourceContentFetcher-ref="httpResourceContentFetcher"/>
                </list>
            </property>
        </bean>

        <bean id="jenkinsReader"
              class="com.boissinot.jenkins.csvexporter.batch.RemoteJenkinsReader"
              c:httpResourceContentFetcher-ref="httpResourceContentFetcher"
              c:jenkinsURL="#{jobParameters['jenkins.url']}"
              scope="step"/>
    </beans>

</beans>